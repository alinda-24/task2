name: Reusable Generate Task Workflow

on:
  workflow_call:
    inputs:
      theme:
        description: 'Theme for the new task'
        required: true
        type: string
        default: 'Create a simple game application that includes the following functionalities: player movement, scoring system, and enemy interactions.'
      difficulty:
        description: 'Difficulty level for the new task (basic, medium, hard)'
        required: true
        type: string
        default: medium
      language:
        description: 'Natural language for the task description'
        required: false
        type: string
        default: 'English'

permissions:
  contents: write  
  pull-requests: write

jobs:
  generate-task-description:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: List directory contents for debugging
        run: ls -R

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai pytz

      - name: Generate task description
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TASK_DIFFICULTY: ${{ inputs.difficulty }}
          TASK_THEME: ${{ inputs.theme }}
          TASK_LANGUAGE: ${{ inputs.language }}
        run: |
          python scripts/generate_task_description.py

  generate-solution:
    runs-on: ubuntu-latest
    needs: generate-task-description
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Generate solution
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/generate_solution.py

  adversarial-review:
    runs-on: ubuntu-latest
    needs: generate-solution
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Adversarial Review - Improve Solution
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/adversarial_solution.py

  generate-tests:
    runs-on: ubuntu-latest
    needs: generate-solution
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Generate tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/generate_tests.py

  adversarial-test-review:
    runs-on: ubuntu-latest
    needs: generate-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Adversarial Review - Improve Tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/adversarial_tests.py

  generate-template-code:
    runs-on: ubuntu-latest
    needs: adversarial-review
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Generate template code
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/generate_template_code.py
